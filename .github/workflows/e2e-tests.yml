name: e2e-tests

on:
  push:
    branches: [ main, release/* ]
  pull_request:
    branches: [ main, release/* ]

concurrency:
  group: e2e-tests-${{ github.ref }}
  cancel-in-progress: true

jobs:

  react-tests:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        # run copies of the current job in parallel
        os: [ ubuntu-latest ]
        node-version: [ 14.x ]
        browser: [ chromium ]
    outputs:
      output1: ${{ steps.step1.outputs.test }}
    steps:
        
      - name: 'Run e2e tests (chromium)'
        if: matrix.browser == 'chromium'
        continue-on-error: true
        id: cypress-tests-react
        uses: cypress-io/github-action@v4
        with:
          working-directory: packages/react
          config-file: tests/e2e-storybook/cypress.json
          start: yarn test:e2e-storybook:test:parallel
          ci-build-id: '${{ github.sha }}-${{ github.workflow }}-react'
          install: false
          browser: chrome
          record: true
          parallel: true
        env:
          CYPRESS_RECORD_KEY: carbon-for-ibm-dotcom
          CYPRESS_API_URL: "https://sorry-cypress-director.qfl95m0zv01.us-east.codeengine.appdomain.cloud"
          CYPRESS_CACHE_FOLDER: /home/runner/.cache/Cypress

      - name: Print Dashboard URL
        if: ${{ always() }}
        run: |
          echo Cypress finished with: ${{ steps.cypress-tests-react.outcome }}
          echo See results at ${{ steps.cypress-tests-react.outputs.dashboardUrl }}  

      - name: Bypass failure if test didn't run
        if: ${{ always() && (steps.cypress-tests-react.outcome == 'failure') && (steps.cypress-tests-react.outputs.dashboardUrl == '') }}
        run: |
          echo "::set-output name=test::failed"
          exit 1

      - name: Fail job if a test failed
        if: ${{ always() && (steps.cypress-tests-react.outcome == 'failure') && (steps.cypress-tests-react.outputs.dashboardUrl != '') }}
        run: exit 1     

  react-tests-completed:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    name: Build (matrix)
    needs: react-tests
    steps:
      - name: sadasds
        run: echo ${{ needs.react-tests.outputs.output1 }}
      - name: Check React test matrix status
        if: "${{ needs.react-tests.outputs.output1 == 'failed' }}"
        run: exit 1