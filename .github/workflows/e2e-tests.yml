name: e2e-tests

on:
  push:
    branches: [ main, release/* ]
  pull_request:
    branches: [ main, release/* ]

concurrency:
  group: e2e-tests-${{ github.ref }}
  cancel-in-progress: true

jobs:

  install-react:
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        node-version: [ 14.x ]
        browser: [ chromium ]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - uses: actions/cache@v2
        name: Download any existing cache
        id: yarn-cache
        with:
          path: |
            **/node_modules
            /home/runner/.cache/Cypress
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ matrix.os }}-yarn-v5${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ matrix.os }}-yarn

      - name: Installing dependencies (if not cached)
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --offline

      - name: Build project
        run: yarn lerna run --stream --ignore @carbon/ibmdotcom-web-components --ignore @carbon/ibmdotcom-services-store build
      - name: Build storybook
        working-directory: packages/react
        run: yarn build-storybook

      - name: Save build folder
        uses: actions/upload-artifact@v2
        with:
          name: storybook-build
          path: packages/react/storybook-static

  react-tests:
    runs-on: ubuntu-latest
    needs: install-react
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        # run copies of the current job in parallel
        containers: [1, 2, 3, 4, 5]
        os: [ ubuntu-latest ]
        node-version: [ 14.x ]
        browser: [ chromium ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'        

      - name: Download the build folders
        uses: actions/download-artifact@v2
        with:
          name: storybook-build
          path: packages/react/storybook-static

      - uses: actions/cache@v2
        name: Retrieve yarn cache
        id: yarn-cache
        with:
          path: |
            **/node_modules
            /home/runner/.cache/Cypress
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ matrix.os }}-yarn-v5${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ matrix.os }}-yarn
        
      - name: 'Run e2e tests (chromium)'
        if: matrix.browser == 'chromium'
        continue-on-error: true
        id: cypress-tests-react
        uses: cypress-io/github-action@v4
        with:
          working-directory: packages/react
          config-file: tests/e2e-storybook/cypress.json
          start: yarn test:e2e-storybook:test:parallel
          ci-build-id: '${{ github.sha }}-${{ github.workflow }}-react'
          install: false
          browser: chrome
          record: true
          parallel: true
        env:
          CYPRESS_RECORD_KEY: carbon-for-ibm-dotcom
          CYPRESS_API_URL: "https://sorry-cypress-director.qfl95m0zv01.us-east.codeengine.appdomain.cloud"
          CYPRESS_CACHE_FOLDER: /home/runner/.cache/Cypress

      - name: Print Dashboard URL
        if: ${{ always() }}
        run: |
          echo Cypress finished with: ${{ steps.cypress-tests-react.outcome }}
          echo See results at ${{ steps.cypress-tests-react.outputs.dashboardUrl }}  

      - name: Bypass failure if test didn't run
        id: 
        if: "${{ (steps.cypress-tests-react.outcome == 'failure') && (steps.cypress-tests-react.outputs.dashboardUrl == '') }}"
        run: exit 0

      - name: Create failure file if job failed
        if: ${{ always() && (steps.cypress-tests-react.outcome == 'failure') && (steps.cypress-tests-react.outputs.dashboardUrl != '') }}
        run: touch failure.txt

      - name: Save failure file
        if: ${{ always() && (steps.cypress-tests-react.outcome == 'failure') && (steps.cypress-tests-react.outputs.dashboardUrl != '') }}
        uses: actions/upload-artifact@v2
        with:
          name: failure
          path: failure.txt

      - name: Exit upon failure
        if: ${{ always() && (steps.cypress-tests-react.outcome == 'failure') && (steps.cypress-tests-react.outputs.dashboardUrl != '') }}
        run: exit 1    


  react-tests-completed:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    name: Build (matrix)
    needs: react-tests
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: failure

      - name: Check failure file existence
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "failure.txt"

      - name: Failure file exists, exit with error
        if: steps.check_files.outputs.files_exists == 'true'
        # Only runs if all of the files exists
        run: exit 1